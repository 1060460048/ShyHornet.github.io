<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>codeGlider&#39;s blog</title>
    <description>Do not go gentle into that good night...</description>
    <link>http://ShyHornet.github.io/</link>
    <atom:link href="http://ShyHornet.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>如何在Mac(OSX 10.11)上更新Python</title>
        <description>&lt;p&gt;首先下载最新版本的&lt;code class=&quot;prettyprint&quot;&gt;python&lt;/code&gt;，目前最新版本3.5:&lt;br&gt;
&lt;a href=&quot;https://www.python.org/ftp/python/3.5.0/python-3.5.0-macosx10.6.pkg&quot;&gt;下载地址&lt;/a&gt;&lt;br&gt;
安装完成之后，打开终端，输入命令查看&lt;code class=&quot;prettyprint&quot;&gt;python&lt;/code&gt;的版本:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果不出意外。。应该还是2.7。。。&lt;br&gt;
什么！？为什么。。好吧，别急，这是因为&lt;code class=&quot;prettyprint&quot;&gt;python&lt;/code&gt;安装的路径是&lt;code class=&quot;prettyprint&quot;&gt;/Library/Frameworks/Python.framework&lt;/code&gt;，&lt;br&gt;
而系统路径是&lt;code class=&quot;prettyprint&quot;&gt;System/Library/Frameworks/Python.framework&lt;/code&gt;所以我们还要移动一下。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;稍等，在这之前我们还要做一件事情，那就是OSX 10.11引入了更为严格的安全机制，我们所提到的&lt;code class=&quot;prettyprint&quot;&gt;System/Library/Frameworks/Python.framework&lt;/code&gt;权限实际上比&lt;code class=&quot;prettyprint&quot;&gt;root&lt;/code&gt;还要高。。传说中的&lt;code class=&quot;prettyprint&quot;&gt;rootless&lt;/code&gt;，说实话比较坑。。不过我们还是有办法解决它:&lt;br&gt;
1. 重启电脑&lt;br&gt;
2. 按住&lt;code class=&quot;prettyprint&quot;&gt;Command+R&lt;/code&gt;直到出现苹果logo并读条，进入恢复模式&lt;br&gt;
3. 打开恢复模式的终端输入命令:&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;bash&lt;br&gt;
$ csrutil disable&lt;br&gt;
&lt;/code&gt;&lt;br&gt;
如果还是没有权限，就在前面加上&lt;code class=&quot;prettyprint&quot;&gt;sudo&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;移动的话，我写了一个可运行的&lt;code class=&quot;prettyprint&quot;&gt;shellScript&lt;/code&gt;文件，可以帮你做到这一切:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;!/bin/bash
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;python版号需要修改两个地方
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;1. new_version

sudo -i
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;得到超级权限
&lt;span class=&quot;nv&quot;&gt;new_version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3.5&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;PYPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/System/Library/Frameworks/Python.framework/Versions/&lt;span class=&quot;s2&quot;&gt;&amp;quot;$new_version&amp;quot;&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;第1步移动新版python到mac默认目录下
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;move..&amp;quot;&lt;/span&gt;
mv /Library/Frameworks/Python.framework/Versions/&lt;span class=&quot;s2&quot;&gt;&amp;quot;$new_version&amp;quot;&lt;/span&gt; /System/Library/Frameworks/Python.framework/Versions/
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;第2步改变用户目录的用户组
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;chown..&amp;quot;&lt;/span&gt;
chown -R root:wheel &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PYPATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;第3步 删除原来2.7的链接
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;del..&amp;quot;&lt;/span&gt;
rm /System/Library/Frameworks/Python.framework/Versions/Current
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;第4步重新链接到最新版本的python
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ln..&amp;quot;&lt;/span&gt;
ln -s &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PYPATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; /System/Library/Frameworks/Python.framework/Versions/Current
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;第5步删除旧的命令符号链接
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rm..&amp;quot;&lt;/span&gt;
rm /usr/bin/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;pydoc,python,pythonw,python-config&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ln bin..&amp;quot;&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;第6步重新建立新的命令符号链接
ln -s &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PYPATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/pydoc&lt;span class=&quot;s2&quot;&gt;&amp;quot;$new_version&amp;quot;&lt;/span&gt; /usr/bin/pydoc
ln -s &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PYPATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/python&lt;span class=&quot;s2&quot;&gt;&amp;quot;$new_version&amp;quot;&lt;/span&gt; /usr/bin/python
ln -s &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PYPATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/pythonw&lt;span class=&quot;s2&quot;&gt;&amp;quot;$new_version&amp;quot;&lt;/span&gt; /usr/bin/pythonw
ln -s &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PYPATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/python&lt;span class=&quot;s2&quot;&gt;&amp;quot;$new_version&amp;quot;&lt;/span&gt;m-config /usr/bin/python-config


&lt;span class=&quot;nv&quot;&gt;python_param_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/bin &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ls -al &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;grep &lt;span class=&quot;s2&quot;&gt;&amp;quot;Python&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;ORS=&amp;quot; &amp;quot; {print $9}&amp;#39;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;第7步修复其他链接
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; i in &lt;span class=&quot;nv&quot;&gt;$python_param_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;info: $i&amp;quot;&lt;/span&gt;
  rm -f /usr/local/bin/&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
  ln -sv /System/Library/Frameworks/Python.framework/Versions/&lt;span class=&quot;s2&quot;&gt;&amp;quot;$new_version&amp;quot;&lt;/span&gt;/bin/&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; /usr/local/bin/&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;第8步.环境变量要修改为最新的版本号
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;export PATH=/System/Library/Frameworks/Python.framework/Versions/3.4/bin:${PATH}&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc

&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#退出超级权限&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;sh文件如何运行?&lt;br&gt;
1. 为其修改权限:&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;$ chmod 777 &amp;lt;sh文件路径&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 21 Oct 2015 00:00:00 +0800</pubDate>
        <link>http://ShyHornet.github.io/2015/10/21/mac(OSX%2010.11)%E4%B8%8A%E6%9B%B4%E6%96%B0Python/</link>
        <guid isPermaLink="true">http://ShyHornet.github.io/2015/10/21/mac(OSX%2010.11)%E4%B8%8A%E6%9B%B4%E6%96%B0Python/</guid>
      </item>
    
      <item>
        <title>Jekyll初探</title>
        <description>&lt;p&gt;受到&lt;a href=&quot;http://www.jianshu.com/p/4fd3cb0a11da&quot;&gt;野子Joey的文章&lt;/a&gt;的启发，我也开始研究&lt;strong&gt;Jekyll&lt;/strong&gt;了!&lt;br&gt;
在研究过程中遇到了不少问题，但是在折腾的过程中也锻炼了前端开发能力，而且看着自己的博客一点一点成型，最后运行在&lt;strong&gt;github&lt;/strong&gt;上，确实很有成就感!。&lt;br&gt;
目前初步建立了自己的&lt;strong&gt;Jekyll&lt;/strong&gt;博客,研究了好几天Jkeyll如何运作以及如何进行各种个性化设置。&lt;/p&gt;

&lt;h1 id=&quot;首先是安装&quot;&gt;首先是安装&lt;/h1&gt;

&lt;p&gt;这一步很简单,只需在终端输入:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建一个简单的博客并运行:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll new helloJekyll
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;helloJkeyll
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;serve 还可以加上参数 -w 这样修改网站后可以自动更改，刷新后反映到浏览器中&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在浏览器中输入&lt;strong&gt;localhost:4000&lt;/strong&gt;即可观看效果:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ShyHornet/ShyHornet.github.io/master/images/post/2015-10-15-1.png&quot; alt=&quot;初始网站&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;关于如何建立&lt;code class=&quot;prettyprint&quot;&gt;github&lt;/code&gt;的网站，可以参照我开头提到的&lt;a href=&quot;http://www.jianshu.com/p/4fd3cb0a11da&quot;&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我们来看一眼基本的Jekyll的一般目录结构:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;.
├── _config.yml
├── _drafts
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   ├── begin-with-the-crazy-ideas.textile
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   └── on-simplicity-in-technology.markdown
├── _includes
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   ├── footer.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   └── header.html
├── _layouts
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   ├── default.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   └── post.html
├── _posts
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   ├── 2007-10-29-why-every-programmer-should-play-nethack.textile
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   └── 2009-04-26-barcamp-boston-4-roundup.textile
├── css
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;── images
├── _site
└── index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;_config.yml&lt;/strong&gt;用来保存一些配置数据;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;_drafts&lt;/strong&gt;目录用来存储草稿，与已经发布的文章不同，这是没有日期的文章，在运行&lt;code class=&quot;prettyprint&quot;&gt;jekyll serve&lt;/code&gt;会自动赋予当前日期。已经发布的文章在&lt;strong&gt;_posts&lt;/strong&gt;目录下。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;_includes&lt;/strong&gt;目录中包含的html文件可以作为模块来加载,比如加载&lt;code class=&quot;prettyprint&quot;&gt;footer.html&lt;/code&gt;可以使用标签&lt;code class=&quot;prettyprint&quot;&gt;{&lt;/code&gt;&lt;code class=&quot;prettyprint&quot;&gt;%&lt;/code&gt;  &lt;code class=&quot;prettyprint&quot;&gt;%&lt;/code&gt;&lt;code class=&quot;prettyprint&quot;&gt;}&lt;/code&gt;将代码&lt;code class=&quot;prettyprint&quot;&gt;include footer.html&lt;/code&gt;包裹其中来加载,这些代码被称作&lt;a href=&quot;https://themes.shopify.com&quot;&gt;Liquid&lt;/a&gt;代码，在Jekyll中大量使用这种语法&lt;/li&gt;
&lt;li&gt;正如上面所说&lt;strong&gt;_posts&lt;/strong&gt;中放的是发布的文章，不过格式一定要符合&lt;code class=&quot;prettyprint&quot;&gt;年-月-日-标题.md&lt;/code&gt;否则会有错误。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;_layouts&lt;/strong&gt;这里存放文章的模板,&lt;strong&gt;default.html&lt;/strong&gt;是整个网站的框架，&lt;strong&gt;post.html&lt;/strong&gt;则是单个文章的模板。
剩下两个就很好理解，整个网页的css样式表，和图片资源，如果需要，你还可以加上js文件夹等等，无论你加上多少文件夹，到最后Jekyll都会自动对他们进行转换，最后生成完整的网站到&lt;strong&gt;_site&lt;/strong&gt;文件夹中。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;所以在修改网站内容的时候，不要去修改&lt;strong&gt;_site&lt;/strong&gt;文件夹里的内容，否则一旦网站运行起来，Jekyll会更新&lt;strong&gt;_site&lt;/strong&gt;文件夹，修改会被重置。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;关于配置文件&quot;&gt;关于配置文件&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Site settings&lt;/span&gt;
title: &lt;span class=&quot;s2&quot;&gt;&amp;quot;codeGlider&amp;#39;s blog&amp;quot;&lt;/span&gt;
description: &lt;span class=&quot;s2&quot;&gt;&amp;quot;Do not go gentle into that good night...&amp;quot;&lt;/span&gt;
baseurl: &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
url: &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://ShyHornet.github.io&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Build settings&lt;/span&gt;
markdown: redcarpet
permalink: pretty
highlighter: pygments
paginate: 3

&lt;span class=&quot;c&quot;&gt;# Links&lt;/span&gt;
links:
  - title: &lt;span class=&quot;s2&quot;&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;
    url: /
  - title: &lt;span class=&quot;s2&quot;&gt;&amp;quot;About&amp;quot;&lt;/span&gt;
    url: /about
  - title: &lt;span class=&quot;s2&quot;&gt;&amp;quot;简书&amp;quot;&lt;/span&gt;
    url: http://www.jianshu.com/users/3007ce57abd3/latest_articles
  - title: &lt;span class=&quot;s2&quot;&gt;&amp;quot;github&amp;quot;&lt;/span&gt;
    url: http://github.com/ShyHornet
  - title: &lt;span class=&quot;s2&quot;&gt;&amp;quot;订阅&amp;quot;&lt;/span&gt;
    url: /feed.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是我的配置文件，实际上这些都是可以自己定义的全局变量，然后你在网站的各个地方都可以使用上面所提到的&lt;code class=&quot;prettyprint&quot;&gt;Liquid&lt;/code&gt;代码引用,所有该文件中定义的变量都可以使用&lt;code class=&quot;prettyprint&quot;&gt;site.#&lt;/code&gt;的形式来引用。&lt;br&gt;
像下面这样:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;pageTitle center&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;color: #000;&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;`{``{` site.baseurl `}``}`/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;`{``{ site.title `}`}`&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sub-title&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    `{``{` site.description `}``}`
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;代码取自本站源码,&lt;code class=&quot;prettyprint&quot;&gt;{&lt;/code&gt;都被我用``包了起来，否则就会渲染出这些变量的值了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注意到&lt;code class=&quot;prettyprint&quot;&gt;Links&lt;/code&gt;，个人理解相当于定义一个数组，数组元素是结构体，可以通过内嵌&lt;code class=&quot;prettyprint&quot;&gt;for&lt;/code&gt;循环来得到他们的值:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;`{``%` for link in site.links `%``}`
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;page-link&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;`{``{` link.url | prepend: site.baseurl `}``}`&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;`{``{` link.title `}``}`&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
`{``%` endfor `%``}`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;渲染后:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;page-link&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;主页&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;page-link&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/about&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;关于&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;page-link&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.jianshu.com/users/3007ce57abd3/latest_articles&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;简书&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;page-link&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://github.com/ShyHornet&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;源码&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;page-link&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/feed.xml&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;订阅&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这其实就是网站的导航部分,&lt;a href=&quot;https://raw.githubusercontent.com/ShyHornet/ShyHornet.github.io/master/_includes/header.html&quot;&gt;源码地址&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;关于写文章&quot;&gt;关于写文章&lt;/h1&gt;

&lt;p&gt;所有文章的markdown文件存储在&lt;strong&gt;_posts&lt;/strong&gt;文件夹下，只要将要发布文章的文章拖入这个文件夹就可以了，刷新网页之后你的文章就会出现，如上面所述，文件名要符合&lt;code class=&quot;prettyprint&quot;&gt;年-月-日-标题.md&lt;/code&gt;的格式。&lt;br&gt;
但是在写作的时候感觉到很不适应，因为其markdown语法和github，或简书上的markdown语法很不一样，比如代码高亮部分只能用以下形式:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;`{``%` highlight language `%``}`
your code....
`{``%` endhighlight `%``}`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是因为&lt;code class=&quot;prettyprint&quot;&gt;Jekyll&lt;/code&gt;使用的&lt;code class=&quot;prettyprint&quot;&gt;markdown&lt;/code&gt;解析器不太一样，默认使用&lt;code class=&quot;prettyprint&quot;&gt;kramdown&lt;/code&gt;作为&lt;code class=&quot;prettyprint&quot;&gt;markdown&lt;/code&gt;解析器。不过可以改成我们需要的markdown解析器，在&lt;strong&gt;_config.yml&lt;/strong&gt;文件中可以指定&lt;code class=&quot;prettyprint&quot;&gt;markdown&lt;/code&gt;解析器&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在&lt;code class=&quot;prettyprint&quot;&gt;Jekyll&lt;/code&gt;中，默认有三种&lt;code class=&quot;prettyprint&quot;&gt;markdown&lt;/code&gt;解析器:kramdown,redcarpet,rdiscount。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我发现redcarpet比较符合github和简书的&lt;code class=&quot;prettyprint&quot;&gt;markdown&lt;/code&gt;语法，在&lt;strong&gt;_config.yml&lt;/strong&gt;文件中将&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;markdown:kramdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;改为&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;markdown:redcarpet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;工作还不算完，因为&lt;code class=&quot;prettyprint&quot;&gt;redcarpet&lt;/code&gt;的&lt;code class=&quot;prettyprint&quot;&gt;markdown&lt;/code&gt;格式还是有一些地方与&lt;code class=&quot;prettyprint&quot;&gt;github&lt;/code&gt;风格的&lt;code class=&quot;prettyprint&quot;&gt;markdown&lt;/code&gt;不相符,那么如何解决呢？别急，&lt;code class=&quot;prettyprint&quot;&gt;Jekyll&lt;/code&gt;已经为我们想到了:&lt;br&gt;
可以为&lt;code class=&quot;prettyprint&quot;&gt;redcarpet&lt;/code&gt;增加一些扩展,具体的扩展列表在&lt;code class=&quot;prettyprint&quot;&gt;redcarpet&lt;/code&gt;的&lt;a href=&quot;https://github.com/vmg/redcarpet/blob/v2.2.2/README.markdown#and-its-like-really-simple-to-use&quot;&gt;官方文档&lt;/a&gt;中。&lt;br&gt;
在配置文件中增加如下代码:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;redcarpet:
    extensions: [ &amp;quot;hard_wrap&amp;quot;,&amp;quot;autolink&amp;quot;, &amp;quot;tables&amp;quot;, &amp;quot;strikethrough&amp;quot;, &amp;quot;superscript&amp;quot;, &amp;quot;with_toc_data&amp;quot;, &amp;quot;highlight&amp;quot;, &amp;quot;prettify&amp;quot;,&amp;quot;no_intra_emphasis&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在，&lt;code class=&quot;prettyprint&quot;&gt;Jekyll&lt;/code&gt;的&lt;code class=&quot;prettyprint&quot;&gt;markdown&lt;/code&gt;格式就基本和&lt;code class=&quot;prettyprint&quot;&gt;github&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;简书&lt;/code&gt;中的&lt;code class=&quot;prettyprint&quot;&gt;markdown&lt;/code&gt;格式相同了！&lt;/p&gt;

&lt;h1 id=&quot;代码高亮自定义&quot;&gt;代码高亮自定义&lt;/h1&gt;

&lt;p&gt;代码高亮部分也是可以自定义，本网站使用的是&lt;code class=&quot;prettyprint&quot;&gt;pygments&lt;/code&gt;作为代码高亮器,其实这和github上使用的代码高亮器是相同的，它的风格可以选择，不过因为它是&lt;code class=&quot;prettyprint&quot;&gt;python&lt;/code&gt;编写的，需要用&lt;code class=&quot;prettyprint&quot;&gt;python&lt;/code&gt;的管理工具&lt;code class=&quot;prettyprint&quot;&gt;pip&lt;/code&gt;进行安装。&lt;br&gt;
以Mac(OSX10.11)为例，虽然本身自带&lt;code class=&quot;prettyprint&quot;&gt;python&lt;/code&gt;，但是并没有安装&lt;code class=&quot;prettyprint&quot;&gt;pip&lt;/code&gt;，所以要去手动下载安装:&lt;br&gt;
&lt;a href=&quot;https://pypi.python.org/packages/source/p/pip/pip-7.1.2.tar.gz#md5=3823d2343d9f3aaab21cf9c917710196&quot;&gt;下载地址&lt;/a&gt;&lt;br&gt;
下载后直接解压缩,打开终端将当前目录切换到解压缩后的文件夹中,然后输入:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python setup.py install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输入&lt;code class=&quot;prettyprint&quot;&gt;pip&lt;/code&gt;看看有没有反应,如果显示出&lt;code class=&quot;prettyprint&quot;&gt;pip&lt;/code&gt;命令的帮助就说明安装成功。&lt;br&gt;
然后输入:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install pygments
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;自定义代码高亮风格很简单，在css文件夹中建立一个新的css文件&lt;code class=&quot;prettyprint&quot;&gt;pygments.css&lt;/code&gt;，用来放置代码高亮样式。&lt;br&gt;
然后用以下命令生成&lt;code class=&quot;prettyprint&quot;&gt;pygments&lt;/code&gt;的&lt;code class=&quot;prettyprint&quot;&gt;css&lt;/code&gt;样式表:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; pygmentize -S default -f html &amp;gt; your/path/pygments.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样是将默认风格的代码高亮风格注入到了我们新建的css文件中，这里也可以指定其他自带代码高亮样式.&lt;br&gt;
所有自带代码样式的列表可以通过输入&lt;code class=&quot;prettyprint&quot;&gt;python&lt;/code&gt;命令得到:&lt;br&gt;
首先输入&lt;code class=&quot;prettyprint&quot;&gt;python&lt;/code&gt;进入&lt;code class=&quot;prettyprint&quot;&gt;python&lt;/code&gt;命令行模式:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后打印所有代码风格:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from pygments.styles import STYLE_MAP
&amp;gt;&amp;gt;&amp;gt; STYLE_MAP.keys&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;manni&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;igor&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;xcode&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;vim&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;autumn&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;vs&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;rrt&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;native&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;perldoc&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;borland&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;tango&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;emacs&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;friendly&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;monokai&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;paraiso-dark&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;colorful&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;murphy&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;bw&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;pastie&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;paraiso-light&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;trac&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;fruity&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以用其中任何一个名称代替上面代码中的&lt;code class=&quot;prettyprint&quot;&gt;default&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;比如&lt;code class=&quot;prettyprint&quot;&gt;xcode&lt;/code&gt;风格:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ShyHornet/ShyHornet.github.io/master/images/post/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-22%20%E4%B8%8B%E5%8D%8812.34.26.png&quot; alt=&quot;屏幕快照 2015-10-22 下午12.34.26.png&quot;&gt;&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;borland&lt;/code&gt;风格:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ShyHornet/ShyHornet.github.io/master/images/post/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-22%20%E4%B8%8B%E5%8D%8812.33.32.png&quot; alt=&quot;屏幕快照 2015-10-22 下午12.33.32.png&quot;&gt;&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;colorful&lt;/code&gt;风格:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ShyHornet/ShyHornet.github.io/master/images/post/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-22%20%E4%B8%8B%E5%8D%8812.51.42.png&quot; alt=&quot;屏幕快照 2015-10-22 下午12.51.42.png&quot;&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 18 Oct 2015 00:00:00 +0800</pubDate>
        <link>http://ShyHornet.github.io/2015/10/18/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</link>
        <guid isPermaLink="true">http://ShyHornet.github.io/2015/10/18/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</guid>
      </item>
    
      <item>
        <title>欢迎访问我的博客!</title>
        <description>&lt;p&gt;经过一天的钻研，终于建立了自己的私人博客，使用&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;(我发现了汉化版的官网，虽然有部分文字没有汉化，但是也比原文好读得多&lt;a href=&quot;http://jekyllcn.com&quot;&gt;Jekyll汉化版官网&lt;/a&gt;)&lt;br&gt;
创建和发布博客,使用&lt;a href=&quot;https://pages.github.com&quot;&gt;github-pages&lt;/a&gt;来作为网站服务器,真的非常方便而且有趣，而且在你倒腾的过程中，也学习了网页开发，可谓一举两得！&lt;br&gt;
此网站的建立受到了&lt;a href=&quot;http://www.jianshu.com/p/4fd3cb0a11da&quot;&gt;野子Joey的文章&lt;/a&gt;的启发,还有&lt;a href=&quot;http://zhangwenli.com/&quot;&gt;张雯丽博客&lt;/a&gt;(代码在&lt;a href=&quot;https://github.com/Ovilia/blog&quot;&gt;github&lt;/a&gt;上)的强烈启发！非常感谢！&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Oct 2015 00:00:00 +0800</pubDate>
        <link>http://ShyHornet.github.io/2015/10/14/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://ShyHornet.github.io/2015/10/14/welcome-to-jekyll/</guid>
      </item>
    
  </channel>
</rss>
